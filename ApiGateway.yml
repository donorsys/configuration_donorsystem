server:
  port: 8765
  
zuul:
  routes:
    AccountMicroService:
          path: /api/user/**
          serviceId: AccountMicroService
    DonorsMicroService:
          path: /donors/**
          serviceId: DonorsMicroService
    DataProcessingMicroService :
          path: /data/**
          serviceId: DataProcessingMicroService
    NotificationMicroService:
          path: /notification/**
          serviceId: NotificationMicroService
    DonorSystemPortal: 
          path: /**
          serviceId: DonorSystemPortal
    user: 
      path: /api/loggedinuser/**
      stripPrefix: true
      url: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}
       
# Define the Eureka server that handles service registration     
spring:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      clientId: ApiGateway
      clientSecret: ${GATEWAY_PASSWORD}
# The userInfoUri is used to authenticate the user so that SSO token can be relayed forward. It needs to either be
# a physical endpoint (defined using userInfoUri) OR can be bypassed if you use a JSON web token (JWT) that stores
# information about grants and authentication in the token itself.
    resource: 
      userInfoUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/me
      preferTokenInfo: false 
    
# Datasource and JPA configuration to be used for using the same tokenstore as the authorization server for
# the defined resource server. Note that there can't be 2 different root nodes, so datasource falls under the "spring" node.
  datasource:
    url: jdbc:mysql://locahost:3306/auth
    username: root
    password: root
    driver-class: com.mysql.jdbc.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create
      
      